plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.8.1"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.14.0",
    junitVersion = "5.7.1",
    selenideVersion = "5.23.1",
    restAssuredVersion = "4.4.0",
    assertjVersion = "3.19.0",
    aspectjweaverVersion = "1.9.7",
    ownerVersion = "1.0.12";

allure {
    version = allureVersion
    aspectjweaver = true
    autoconfigure = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.aspectj:aspectjweaver:$aspectjweaverVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
    )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}